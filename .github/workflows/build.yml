name: SonarQube Scan
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
 
jobs:
  sonarQube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
 
      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
 
      - name: Install SonarQube Scanner
        run: |
          curl -sSLo /tmp/sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip /tmp/sonar-scanner-cli.zip -d $HOME/.sonar
          echo "$HOME/.sonar/sonar-scanner-4.6.2.2472-linux/bin" >> $GITHUB_PATH
 
      - name: Print SonarQube URL
        run: echo "SonarQube URL:${{ secrets.SONAR_HOST_URL }}"
 
      - name: Test SonarQube Connectivity
        run: curl -v ${{ secrets.SONAR_HOST_URL }}
 
      - name: Start SonarQube Server
        run: |
          # Replace with actual command to start SonarQube server
          cd /opt/sonarqube
          ./bin/sonar.sh start
        # Ensure SonarQube server is started before proceeding
        timeout-minutes: 5
 
      - name: Run SonarQube scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my-project-key \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
 
